PROMPT: 
Given 3 int values, a b c, return their sum. However, if any of the values is a teen -- in the range 13..19 inclusive -- then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper "public int fixTeen(int n) {"that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. "decomposition"). Define the helper below and at the same indent level as the main noTeenSum().


noTeenSum(1, 2, 3) → 6
noTeenSum(2, 13, 1) → 3
noTeenSum(2, 1, 14) → 3

CODE: 
public int noTeenSum(int a, int b, int c)
{
  int n1 = a;
  int n2 = b;
  int n3 = c;
  
  if((a<=19&&a>16)||(a<15&&a>=13))
    n1 = 0;
  if((b<=19&&b>16)||(b<15&&b>=13))
    n2 = 0;
  if((c<=19&&c>16)||(c<15&&c>=13))
    n3 = 0;
    
  return n1+n2+n3;
}
